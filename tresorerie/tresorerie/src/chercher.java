
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Zakaria
 */
public class chercher extends javax.swing.JFrame {

    /**
     * Creates new form chercher
     */
     Connection con;
     DefaultTableModel model;
    public chercher() throws SQLException {
        initComponents();
        setTitle("Chercher");
        setVisible(true);
        con=BaseDonne.getInstance().getConnexion();
        model=(DefaultTableModel) jTable1.getModel();
        afficher();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        txtcf = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setText("Code Frs");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, -1, 20));
        getContentPane().add(txtcf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 170, -1));

        jButton1.setText("Chercher");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 170, -1));

        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Code frs ", "fournisseur", "Saisie_arret", "Commande_Marche", "Ville", "Agence", "Banque", "N Compte", "Date Ecrit", "Date_Maj", "N Order", "Arrivee"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 820, 230));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         PreparedStatement state;
              
         try {
             state=con.prepareStatement("SELECT attestation_rib.ID,attestation_rib.Code_Frs,fournisseur.Fournisseur,attestation_rib.Saisie_Arret,attestation_rib.Commande_Marche,ville.Ville,ville.Agence,banque.Banque,banque.N_Compte,attestation_rib.Date_Ecrit,attestation_rib.Dte_MAJ,attestation_rib.N_Ordre,attestation_rib.Arrivee FROM attestation_rib,fournisseur,ville,banque WHERE Code_Frs=? && attestation_rib.Code_Frs=fournisseur.Code_Frs && attestation_rib.Banque=ville.id && banque.id_Ville=ville.id");
             state.setInt(1, Integer.valueOf(txtcf.getText()));
             ResultSet result=state.executeQuery();
             if(result.next())
             { model.setRowCount(0);
                  int id=result.getInt(1);
        int codef=result.getInt(2);
        String s=result.getString(3);
        String c=result.getString(4);
        String cc=result.getString(5);
        String v=result.getString(6);
        String ag=result.getString(7);
        String bq=result.getString(8);
        int ncp=result.getInt(9);
        String d=result.getString(10);
        String d2=result.getString(11);
        String norder=result.getString(12);
        String ar=result.getString(13);
        Object[] obj={id,codef,s,c,cc,v,ag,bq,ncp,d,d2,norder,ar};
        model.addRow(obj);
             }else
             {
                 JOptionPane.showMessageDialog(this,"non trouve!!!");
             }

         } catch (SQLException ex) {
           
         }
        
   
    }//GEN-LAST:event_jButton1ActionPerformed
private void afficher() throws SQLException    
{
    PreparedStatement state;
        state=con.prepareStatement("SELECT attestation_rib.ID,attestation_rib.Code_Frs,fournisseur.Fournisseur,attestation_rib.Saisie_Arret,attestation_rib.Commande_Marche,ville.Ville,ville.Agence,banque.Banque,banque.N_Compte,attestation_rib.Date_Ecrit,attestation_rib.Dte_MAJ,attestation_rib.N_Ordre,attestation_rib.Arrivee FROM attestation_rib,fournisseur,ville,banque WHERE attestation_rib.Code_Frs=fournisseur.Code_Frs && attestation_rib.Banque=ville.id && banque.id_Ville=ville.id");

    
    ResultSet result=state.executeQuery();
    model.setRowCount(0);
    while(result.next())
    {
        
                  int id=result.getInt(1);
        int codef=result.getInt(2);
        String s=result.getString(3);
        String c=result.getString(4);
        String cc=result.getString(5);
        String v=result.getString(6);
        String ag=result.getString(7);
        String bq=result.getString(8);
        int ncp=result.getInt(9);
        String d=result.getString(10);
        String d2=result.getString(11);
        String norder=result.getString(12);
        String ar=result.getString(13);
        Object[] obj={id,codef,s,c,cc,v,ag,bq,ncp,d,d2,norder,ar};
        model.addRow(obj);
    }
    jTable1.setModel(model);
}

    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(chercher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(chercher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(chercher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(chercher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new chercher().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtcf;
    // End of variables declaration//GEN-END:variables
}
